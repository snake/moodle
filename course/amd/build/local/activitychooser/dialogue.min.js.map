{"version":3,"sources":["../../../src/local/activitychooser/dialogue.js"],"names":["getPlugin","pluginName","showModuleHelp","carousel","moduleData","modal","showFooter","setFooter","Templates","render","help","find","selectors","regions","innerHTML","spinnerPromise","transitionPromiseResolver","transitionPromise","Promise","resolve","contentPromise","renderForPromise","all","then","html","js","replaceNodeContents","querySelector","chooserSummary","header","focus","catch","Notification","exception","one","manageFavouriteState","modalBody","caller","partialFavourite","isFavourite","dataset","favourited","id","name","internal","Repository","unfavouriteModule","favouriteModule","registerListenerEvents","mappedModules","footerData","bodyClickListener","e","target","closest","actions","optionActions","showSummary","getBody","module","chooserOption","container","moduleName","modname","get","hasFooterContent","manageFavourite","activeSectionId","elements","activetab","getAttribute","sectionChooserOptions","getSectionChooserOptions","firstChooserOption","toggleFocusableChooserOption","initChooserOptionsKeyboardNavigation","matches","closeOption","on","allModules","modules","getModuleSelector","clearSearch","searchInput","search","value","toggleSearchResultsView","footerClickListener","installed","customfooterjs","footerjs","getBodyPromise","body","interval","pause","keyboard","addEventListener","initTabsKeyboardNavigation","getFooterPromise","footer","favTabNav","favouriteTabNav","recommendedTabNav","defaultTabNav","forEach","element","firstLink","parentElement","visibletabs","lastLink","lastElementChild","keyCode","arrowRight","nextLink","nextElementSibling","tabIndex","classList","contains","arrowLeft","previousLink","previousElementSibling","home","end","space","preventDefault","click","chooserOptionsContainer","chooserOptions","querySelectorAll","Array","from","enter","currentOption","nextOption","firstOption","firstElementChild","toFocusOption","clickErrorHandler","focusChooserOption","previousOption","lastOption","currentChooserOption","previousChooserOption","isFocusable","chooserOptionLink","addChooser","chooserOptionHelp","chooserOptionFavourite","item","fallback","renderSearchResults","searchResultsContainer","searchResultsData","templateData","length","searchQuery","searchResults","chooserContainer","chooser","clearSearchButton","clearsearch","searchIcon","searchicon","searchModules","searchResultItemsContainer","searchResultItems","firstSearchResultItem","add","remove","setAttribute","removeAttribute","searchTerm","toLowerCase","activity","activityName","title","activityDesc","includes","push","disableFocusAllChooserOptions","allChooserOptions","displayChooser","origin","sectionModules","Map","set","componentname","link","getRoot","ModalEvents","hidden","destroy","shown","getModal","tab","activeSectionChooserOptions","prevActiveSectionId","relatedTarget","prevActiveSectionChooserOptions","show"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A type of dialogue used as for choosing options.\n *\n * @module     core_course/local/chooser/dialogue\n * @package    core\n * @copyright  2019 Mihail Geshoski <mihail@moodle.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport $ from 'jquery';\nimport * as ModalEvents from 'core/modal_events';\nimport selectors from 'core_course/local/activitychooser/selectors';\nimport * as Templates from 'core/templates';\nimport {end, arrowLeft, arrowRight, home, enter, space} from 'core/key_codes';\nimport {addIconToContainer} from 'core/loadingicon';\nimport * as Repository from 'core_course/local/activitychooser/repository';\nimport Notification from 'core/notification';\nimport {debounce} from 'core/utils';\nconst getPlugin = pluginName => import(pluginName);\n\n/**\n * Given an event from the main module 'page' navigate to it's help section via a carousel.\n *\n * @method showModuleHelp\n * @param {jQuery} carousel Our initialized carousel to manipulate\n * @param {Object} moduleData Data of the module to carousel to\n * @param {jQuery} modal We need to figure out if the current modal has a footer.\n */\nconst showModuleHelp = (carousel, moduleData, modal = null) => {\n    // If we have a real footer then we need to change temporarily.\n    if (modal !== null && moduleData.showFooter === true) {\n        modal.setFooter(Templates.render('core_course/local/activitychooser/footer_partial', moduleData));\n    }\n    const help = carousel.find(selectors.regions.help)[0];\n    help.innerHTML = '';\n\n    // Add a spinner.\n    const spinnerPromise = addIconToContainer(help);\n\n    // Used later...\n    let transitionPromiseResolver = null;\n    const transitionPromise = new Promise(resolve => {\n        transitionPromiseResolver = resolve;\n    });\n\n    // Build up the html & js ready to place into the help section.\n    const contentPromise = Templates.renderForPromise('core_course/local/activitychooser/help', moduleData);\n\n    // Wait for the content to be ready, and for the transition to be complet.\n    Promise.all([contentPromise, spinnerPromise, transitionPromise])\n        .then(([{html, js}]) => Templates.replaceNodeContents(help, html, js))\n        .then(() => {\n            help.querySelector(selectors.regions.chooserSummary.header).focus();\n            return help;\n        })\n        .catch(Notification.exception);\n\n    // Move to the next slide, and resolve the transition promise when it's done.\n    carousel.one('slid.bs.carousel', () => {\n        transitionPromiseResolver();\n    });\n    // Trigger the transition between 'pages'.\n    carousel.carousel('next');\n};\n\n/**\n * Given a user wants to change the favourite state of a module we either add or remove the status.\n * We also propergate this change across our map of modals.\n *\n * @method manageFavouriteState\n * @param {HTMLElement} modalBody The DOM node of the modal to manipulate\n * @param {HTMLElement} caller\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n */\nconst manageFavouriteState = async(modalBody, caller, partialFavourite) => {\n    const isFavourite = caller.dataset.favourited;\n    const id = caller.dataset.id;\n    const name = caller.dataset.name;\n    const internal = caller.dataset.internal;\n    // Switch on fave or not.\n    if (isFavourite === 'true') {\n        await Repository.unfavouriteModule(name, id);\n\n        partialFavourite(internal, false, modalBody);\n    } else {\n        await Repository.favouriteModule(name, id);\n\n        partialFavourite(internal, true, modalBody);\n    }\n\n};\n\n/**\n * Register chooser related event listeners.\n *\n * @method registerListenerEvents\n * @param {Promise} modal Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n * @param {Object} footerData Our base footer object.\n */\nconst registerListenerEvents = (modal, mappedModules, partialFavourite, footerData) => {\n    const bodyClickListener = async(e) => {\n        if (e.target.closest(selectors.actions.optionActions.showSummary)) {\n            const carousel = $(modal.getBody()[0].querySelector(selectors.regions.carousel));\n\n            const module = e.target.closest(selectors.regions.chooserOption.container);\n            const moduleName = module.dataset.modname;\n            const moduleData = mappedModules.get(moduleName);\n            // We need to know if the overall modal has a footer so we know when to show a real / vs fake footer.\n            moduleData.showFooter = modal.hasFooterContent();\n            showModuleHelp(carousel, moduleData, modal);\n        }\n\n        if (e.target.closest(selectors.actions.optionActions.manageFavourite)) {\n            const caller = e.target.closest(selectors.actions.optionActions.manageFavourite);\n            await manageFavouriteState(modal.getBody()[0], caller, partialFavourite);\n            const activeSectionId = modal.getBody()[0].querySelector(selectors.elements.activetab).getAttribute(\"href\");\n            const sectionChooserOptions = modal.getBody()[0]\n                .querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n            const firstChooserOption = sectionChooserOptions\n                .querySelector(selectors.regions.chooserOption.container);\n            toggleFocusableChooserOption(firstChooserOption, true);\n            initChooserOptionsKeyboardNavigation(modal.getBody()[0], mappedModules, sectionChooserOptions);\n        }\n\n        // From the help screen go back to the module overview.\n        if (e.target.matches(selectors.actions.closeOption)) {\n            const carousel = $(modal.getBody()[0].querySelector(selectors.regions.carousel));\n\n            // Trigger the transition between 'pages'.\n            carousel.carousel('prev');\n            carousel.on('slid.bs.carousel', () => {\n                const allModules = modal.getBody()[0].querySelector(selectors.regions.modules);\n                const caller = allModules.querySelector(selectors.regions.getModuleSelector(e.target.dataset.modname));\n                caller.focus();\n            });\n        }\n\n        // The \"clear search\" button is triggered.\n        if (e.target.closest(selectors.actions.clearSearch)) {\n            // Clear the entered search query in the search bar and hide the search results container.\n            const searchInput = modal.getBody()[0].querySelector(selectors.actions.search);\n            searchInput.value = \"\";\n            searchInput.focus();\n            toggleSearchResultsView(modal.getBody()[0], mappedModules, searchInput.value);\n        }\n    };\n\n    // We essentially have two types of footer.\n    // A fake one that is handled within the template for chooser_help and then all of the stuff for\n    // modal.footer. We need to ensure we know exactly what type of footer we are using so we know what we\n    // need to manage. The below code handles a real footer going to a mnet carousel item.\n    const footerClickListener = async(e) => {\n        if (footerData.installed === true) {\n            const footerjs = await getPlugin(footerData.customfooterjs);\n            await footerjs.footerClickListener(e, footerData, modal);\n        }\n    };\n\n    modal.getBodyPromise()\n\n    // The return value of getBodyPromise is a jquery object containing the body NodeElement.\n    .then(body => body[0])\n\n    // Set up the carousel.\n    .then(body => {\n        $(body.querySelector(selectors.regions.carousel))\n            .carousel({\n                interval: false,\n                pause: true,\n                keyboard: false\n            });\n\n        return body;\n    })\n\n    // Add the listener for clicks on the body.\n    .then(body => {\n        body.addEventListener('click', bodyClickListener);\n        return body;\n    })\n\n    // Add a listener for an input change in the activity chooser's search bar.\n    .then(body => {\n        const searchInput = body.querySelector(selectors.actions.search);\n        // The search input is triggered.\n        searchInput.addEventListener('input', debounce(() => {\n            // Display the search results.\n            toggleSearchResultsView(body, mappedModules, searchInput.value);\n        }, 300));\n        return body;\n    })\n\n    // Register event listeners related to the keyboard navigation controls.\n    .then(body => {\n        // Get the active chooser options section.\n        const activeSectionId = body.querySelector(selectors.elements.activetab).getAttribute(\"href\");\n        const sectionChooserOptions = body.querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n        const firstChooserOption = sectionChooserOptions.querySelector(selectors.regions.chooserOption.container);\n        toggleFocusableChooserOption(firstChooserOption, true);\n        initTabsKeyboardNavigation(body);\n        initChooserOptionsKeyboardNavigation(body, mappedModules, sectionChooserOptions);\n        return body;\n    })\n    .catch();\n\n    modal.getFooterPromise()\n\n    // The return value of getBodyPromise is a jquery object containing the body NodeElement.\n    .then(footer => footer[0])\n    // Add the listener for clicks on the body.\n    .then(footer => {\n        footer.addEventListener('click', footerClickListener);\n        return footer;\n    })\n    .catch();\n};\n\n/**\n * Initialise the keyboard navigation controls for the tab list items.\n *\n * @method initTabsKeyboardNavigation\n * @param {HTMLElement} body Our modal that we are working with\n */\nconst initTabsKeyboardNavigation = (body) => {\n    // Set up the tab handlers.\n    const favTabNav = body.querySelector(selectors.regions.favouriteTabNav);\n    const recommendedTabNav = body.querySelector(selectors.regions.recommendedTabNav);\n    const defaultTabNav = body.querySelector(selectors.regions.defaultTabNav);\n    const tabNavArray = [favTabNav, recommendedTabNav, defaultTabNav];\n    tabNavArray.forEach((element) => {\n        return element.addEventListener('keydown', (e) => {\n            // The first visible navigation tab link.\n            const firstLink = e.target.parentElement.querySelector(selectors.elements.visibletabs);\n            // The last navigation tab link. It would always be the default activities tab link.\n            const lastLink = e.target.parentElement.lastElementChild;\n\n            if (e.keyCode === arrowRight) {\n                const nextLink = e.target.nextElementSibling;\n                if (nextLink === null) {\n                    e.target.tabIndex = -1;\n                    firstLink.tabIndex = 0;\n                    firstLink.focus();\n                } else if (nextLink.classList.contains('d-none')) {\n                    e.target.tabIndex = -1;\n                    lastLink.tabIndex = 0;\n                    lastLink.focus();\n                } else {\n                    e.target.tabIndex = -1;\n                    nextLink.tabIndex = 0;\n                    nextLink.focus();\n                }\n            }\n            if (e.keyCode === arrowLeft) {\n                const previousLink = e.target.previousElementSibling;\n                if (previousLink === null) {\n                    e.target.tabIndex = -1;\n                    lastLink.tabIndex = 0;\n                    lastLink.focus();\n                } else if (previousLink.classList.contains('d-none')) {\n                    e.target.tabIndex = -1;\n                    firstLink.tabIndex = 0;\n                    firstLink.focus();\n                } else {\n                    e.target.tabIndex = -1;\n                    previousLink.tabIndex = 0;\n                    previousLink.focus();\n                }\n            }\n            if (e.keyCode === home) {\n                e.target.tabIndex = -1;\n                firstLink.tabIndex = 0;\n                firstLink.focus();\n            }\n            if (e.keyCode === end) {\n                e.target.tabIndex = -1;\n                lastLink.tabIndex = 0;\n                lastLink.focus();\n            }\n            if (e.keyCode === space) {\n                e.preventDefault();\n                e.target.click();\n            }\n        });\n    });\n};\n\n/**\n * Initialise the keyboard navigation controls for the chooser options.\n *\n * @method initChooserOptionsKeyboardNavigation\n * @param {HTMLElement} body Our modal that we are working with\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {HTMLElement} chooserOptionsContainer The section that contains the chooser items\n */\nconst initChooserOptionsKeyboardNavigation = (body, mappedModules, chooserOptionsContainer) => {\n    const chooserOptions = chooserOptionsContainer.querySelectorAll(selectors.regions.chooserOption.container);\n\n    Array.from(chooserOptions).forEach((element) => {\n        return element.addEventListener('keydown', (e) => {\n\n            // Check for enter/ space triggers for showing the help.\n            if (e.keyCode === enter || e.keyCode === space) {\n                if (e.target.matches(selectors.actions.optionActions.showSummary)) {\n                    e.preventDefault();\n                    const module = e.target.closest(selectors.regions.chooserOption.container);\n                    const moduleName = module.dataset.modname;\n                    const moduleData = mappedModules.get(moduleName);\n                    const carousel = $(body.querySelector(selectors.regions.carousel));\n                    carousel.carousel({\n                        interval: false,\n                        pause: true,\n                        keyboard: false\n                    });\n                    showModuleHelp(carousel, moduleData);\n                }\n            }\n\n            // Next.\n            if (e.keyCode === arrowRight) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const nextOption = currentOption.nextElementSibling;\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                const toFocusOption = clickErrorHandler(nextOption, firstOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            // Previous.\n            if (e.keyCode === arrowLeft) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const previousOption = currentOption.previousElementSibling;\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                const toFocusOption = clickErrorHandler(previousOption, lastOption);\n                focusChooserOption(toFocusOption, currentOption);\n            }\n\n            if (e.keyCode === home) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const firstOption = chooserOptionsContainer.firstElementChild;\n                focusChooserOption(firstOption, currentOption);\n            }\n\n            if (e.keyCode === end) {\n                e.preventDefault();\n                const currentOption = e.target.closest(selectors.regions.chooserOption.container);\n                const lastOption = chooserOptionsContainer.lastElementChild;\n                focusChooserOption(lastOption, currentOption);\n            }\n        });\n    });\n};\n\n/**\n * Focus on a chooser option element and remove the previous chooser element from the focus order\n *\n * @method focusChooserOption\n * @param {HTMLElement} currentChooserOption The current chooser option element that we want to focus\n * @param {HTMLElement|null} previousChooserOption The previous focused option element\n */\nconst focusChooserOption = (currentChooserOption, previousChooserOption = null) => {\n    if (previousChooserOption !== null) {\n        toggleFocusableChooserOption(previousChooserOption, false);\n    }\n\n    toggleFocusableChooserOption(currentChooserOption, true);\n    currentChooserOption.focus();\n};\n\n/**\n * Add or remove a chooser option from the focus order.\n *\n * @method toggleFocusableChooserOption\n * @param {HTMLElement} chooserOption The chooser option element which should be added or removed from the focus order\n * @param {Boolean} isFocusable Whether the chooser element is focusable or not\n */\nconst toggleFocusableChooserOption = (chooserOption, isFocusable) => {\n    const chooserOptionLink = chooserOption.querySelector(selectors.actions.addChooser);\n    const chooserOptionHelp = chooserOption.querySelector(selectors.actions.optionActions.showSummary);\n    const chooserOptionFavourite = chooserOption.querySelector(selectors.actions.optionActions.manageFavourite);\n\n    if (isFocusable) {\n        // Set tabindex to 0 to add current chooser option element to the focus order.\n        chooserOption.tabIndex = 0;\n        chooserOptionLink.tabIndex = 0;\n        chooserOptionHelp.tabIndex = 0;\n        chooserOptionFavourite.tabIndex = 0;\n    } else {\n        // Set tabindex to -1 to remove the previous chooser option element from the focus order.\n        chooserOption.tabIndex = -1;\n        chooserOptionLink.tabIndex = -1;\n        chooserOptionHelp.tabIndex = -1;\n        chooserOptionFavourite.tabIndex = -1;\n    }\n};\n\n/**\n * Small error handling function to make sure the navigated to object exists\n *\n * @method clickErrorHandler\n * @param {HTMLElement} item What we want to check exists\n * @param {HTMLElement} fallback If we dont match anything fallback the focus\n * @return {HTMLElement}\n */\nconst clickErrorHandler = (item, fallback) => {\n    if (item !== null) {\n        return item;\n    } else {\n        return fallback;\n    }\n};\n\n/**\n * Render the search results in a defined container\n *\n * @method renderSearchResults\n * @param {HTMLElement} searchResultsContainer The container where the data should be rendered\n * @param {Object} searchResultsData Data containing the module items that satisfy the search criteria\n */\nconst renderSearchResults = async(searchResultsContainer, searchResultsData) => {\n    const templateData = {\n        'searchresultsnumber': searchResultsData.length,\n        'searchresults': searchResultsData\n    };\n    // Build up the html & js ready to place into the help section.\n    const {html, js} = await Templates.renderForPromise('core_course/local/activitychooser/search_results', templateData);\n    await Templates.replaceNodeContents(searchResultsContainer, html, js);\n};\n\n/**\n * Toggle (display/hide) the search results depending on the value of the search query\n *\n * @method toggleSearchResultsView\n * @param {HTMLElement} modalBody The body of the created modal for the section\n * @param {Map} mappedModules A map of all of the modules we are working with with K: mod_name V: {Object}\n * @param {String} searchQuery The search query\n */\nconst toggleSearchResultsView = async(modalBody, mappedModules, searchQuery) => {\n    const searchResultsContainer = modalBody.querySelector(selectors.regions.searchResults);\n    const chooserContainer = modalBody.querySelector(selectors.regions.chooser);\n    const clearSearchButton = modalBody.querySelector(selectors.elements.clearsearch);\n    const searchIcon = modalBody.querySelector(selectors.elements.searchicon);\n\n    if (searchQuery.length > 0) { // Search query is present.\n        const searchResultsData = searchModules(mappedModules, searchQuery);\n        await renderSearchResults(searchResultsContainer, searchResultsData);\n        const searchResultItemsContainer = searchResultsContainer.querySelector(selectors.regions.searchResultItems);\n        const firstSearchResultItem = searchResultItemsContainer.querySelector(selectors.regions.chooserOption.container);\n        if (firstSearchResultItem) {\n            // Set the first result item to be focusable.\n            toggleFocusableChooserOption(firstSearchResultItem, true);\n            // Register keyboard events on the created search result items.\n            initChooserOptionsKeyboardNavigation(modalBody, mappedModules, searchResultItemsContainer);\n        }\n        // Display the \"clear\" search button in the activity chooser search bar.\n        searchIcon.classList.add('d-none');\n        clearSearchButton.classList.remove('d-none');\n        // Hide the default chooser options container.\n        chooserContainer.setAttribute('hidden', 'hidden');\n        // Display the search results container.\n        searchResultsContainer.removeAttribute('hidden');\n    } else { // Search query is not present.\n        // Hide the \"clear\" search button in the activity chooser search bar.\n        clearSearchButton.classList.add('d-none');\n        searchIcon.classList.remove('d-none');\n        // Hide the search results container.\n        searchResultsContainer.setAttribute('hidden', 'hidden');\n        // Display the default chooser options container.\n        chooserContainer.removeAttribute('hidden');\n    }\n};\n\n/**\n * Return the list of modules which have a name or description that matches the given search term.\n *\n * @method searchModules\n * @param {Array} modules List of available modules\n * @param {String} searchTerm The search term to match\n * @return {Array}\n */\nconst searchModules = (modules, searchTerm) => {\n    if (searchTerm === '') {\n        return modules;\n    }\n    searchTerm = searchTerm.toLowerCase();\n    const searchResults = [];\n    modules.forEach((activity) => {\n        const activityName = activity.title.toLowerCase();\n        const activityDesc = activity.help.toLowerCase();\n        if (activityName.includes(searchTerm) || activityDesc.includes(searchTerm)) {\n            searchResults.push(activity);\n        }\n    });\n\n    return searchResults;\n};\n\n/**\n * Disable the focus of all chooser options in a specific container (section).\n *\n * @method disableFocusAllChooserOptions\n * @param {HTMLElement} sectionChooserOptions The section that contains the chooser items\n */\nconst disableFocusAllChooserOptions = (sectionChooserOptions) => {\n    const allChooserOptions = sectionChooserOptions.querySelectorAll(selectors.regions.chooserOption.container);\n    allChooserOptions.forEach((chooserOption) => {\n        toggleFocusableChooserOption(chooserOption, false);\n    });\n};\n\n/**\n * Display the module chooser.\n *\n * @method displayChooser\n * @param {HTMLElement} origin The calling button\n * @param {Object} modal Our created modal for the section\n * @param {Array} sectionModules An array of all of the built module information\n * @param {Function} partialFavourite Partially applied function we need to manage favourite status\n */\nexport const displayChooser = (origin, modal, sectionModules, partialFavourite, footerData) => {\n\n    // Make a map so we can quickly fetch a specific module's object for either rendering or searching.\n    const mappedModules = new Map();\n    sectionModules.forEach((module) => {\n        mappedModules.set(module.componentname + '_' + module.link, module);\n    });\n\n    // Register event listeners.\n    registerListenerEvents(modal, mappedModules, partialFavourite, footerData);\n\n    // We want to focus on the action select when the dialog is closed.\n    modal.getRoot().on(ModalEvents.hidden, () => {\n        modal.destroy();\n    });\n\n    // We want to focus on the first chooser option element as soon as the modal is opened.\n    modal.getRoot().on(ModalEvents.shown, () => {\n        modal.getModal()[0].tabIndex = -1;\n\n        modal.getBodyPromise()\n        .then(body => {\n            $(selectors.elements.tab).on('shown.bs.tab', (e) => {\n                const activeSectionId = e.target.getAttribute(\"href\");\n                const activeSectionChooserOptions = body[0]\n                    .querySelector(selectors.regions.getSectionChooserOptions(activeSectionId));\n                const firstChooserOption = activeSectionChooserOptions\n                    .querySelector(selectors.regions.chooserOption.container);\n                const prevActiveSectionId = e.relatedTarget.getAttribute(\"href\");\n                const prevActiveSectionChooserOptions = body[0]\n                    .querySelector(selectors.regions.getSectionChooserOptions(prevActiveSectionId));\n\n                // Disable the focus of every chooser option in the previous active section.\n                disableFocusAllChooserOptions(prevActiveSectionChooserOptions);\n                // Enable the focus of the first chooser option in the current active section.\n                toggleFocusableChooserOption(firstChooserOption, true);\n                initChooserOptionsKeyboardNavigation(body[0], mappedModules, activeSectionChooserOptions);\n            });\n            return;\n        })\n        .catch(Notification.exception);\n    });\n\n    modal.show();\n};\n"],"file":"dialogue.min.js"}