{"version":3,"sources":["../src/advduration.js"],"names":["init","elementId","idPrefix","substr","substring","elements","name","id","rolloverUpperLimit","highestOrderUnit","parentElements","key","elementInfo","element","document","getElementById","setAttribute","parentElementInfo","parentElement","push","allParentElements","slice","addEventListener","eventHandler","bind","event","target","value","parseInt","dispatchEvent","Event","allZero"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * A javascript module to enhance the advduration form element.\n *\n * @copyright  2019 Jake Dallimore <jrhdallimore@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nexport const init = (elementId) => {\n    // Get the element id prefix for all inputs belonging to this element.\n    // If used as a normal (non-grouped) element, elementId will be of the form: \"fitem_id_ELEMENTNAME\".\n    // All inputs within this container have ids like 'id_ELEMENTNAME_weeks', 'id_ELEMENTNAME_days', etc.\n    // If used in a group, there is no container element beginning with 'fitem_' and the elementId will be of the form:\n    // \"id_ELEMENTNAME\".\n    const idPrefix = (elementId.substr(0, 6) === \"fitem_\") ? elementId.substring(6) : elementId;\n    const elements = [\n        {\n            name: 'weeks',\n            id: idPrefix + '_w',\n            rolloverUpperLimit: null\n        },\n        {\n            name: 'days',\n            id: idPrefix + '_d',\n            rolloverUpperLimit: 7\n        },\n        {\n            name: 'hours',\n            id: idPrefix + '_h',\n            rolloverUpperLimit: 24\n        },\n        {\n            name: 'minutes',\n            id: idPrefix + '_i',\n            rolloverUpperLimit: 60\n        },\n        {\n            name: 'seconds',\n            id: idPrefix + '_s',\n            rolloverUpperLimit: 60\n        }\n    ];\n\n    // For each potential element, check to see if it's in the DOM and bind event handlers.\n    let highestOrderUnit = null; // This records the highest unit in the current duration widget.\n    let parentElements = []; // Contains all elements we've already seen in the loop (parents of the current element).\n    for (let key in elements) {\n        let elementInfo = elements[key];\n        let element = document.getElementById(elementInfo.id);\n        if (element) {\n            // Don't add an event handler for the highest order unit being displayed.\n            // This field has no parent to affect.\n            if (!highestOrderUnit) {\n                highestOrderUnit = elementInfo.name;\n                element.setAttribute('min', '0'); // Disable negative rollover for the highest order element.\n                continue;\n            }\n\n            // At this point, the highest order unit has been found in the DOM,\n            // so every element is guaranteed to have a parent at the -1 position.\n            const parentElementInfo = elements[key - 1];\n            const parentElement = document.getElementById(parentElementInfo.id);\n            parentElements.push(parentElement);\n            const allParentElements = parentElements.slice(); // The current element's parents.\n            element.addEventListener('input', eventHandler.bind(null, elementInfo, parentElement, allParentElements), false);\n        }\n    }\n};\n\nconst eventHandler = (elementInfo, parentElement, allParentElements, event) => {\n    const target = event.target;\n\n    // Adjust the parent element on rollover.\n    if (target.value >= elementInfo.rolloverUpperLimit) {\n        // Incrementing is unconditional rollover. Always rollover and increment the parent value.\n        target.value = 0;\n        parentElement.value = parseInt(parentElement.value) + 1;\n        parentElement.dispatchEvent(new Event('input'));\n    } else if (target.value < 0) {\n        // Decrementing is conditional rollover. We can't decrement beyond 0.\n        if (parentElement.value > 0) {\n            // If the parent has a positive value, allow rollover of target and decrement the parent value.\n            target.value = elementInfo.rolloverUpperLimit - 1;\n            parentElement.value = parseInt(parentElement.value) - 1;\n            parentElement.dispatchEvent(new Event('input'));\n        } else if (parentElement.value <= 0) {\n            // If the parent has a zero value, only rollover target and reduce the parent value\n            // if a non-zero-value ancestor of the parent exists.\n            let allZero = true;\n            for (let key in allParentElements) {\n                if (parseInt(allParentElements[key].value) != 0) {\n                    allZero = false;\n                    break;\n                }\n            }\n            if (allZero) {\n                target.value = 0;\n            } else {\n                parentElement.value = parseInt(parentElement.value) - 1;\n                parentElement.dispatchEvent(new Event('input'));\n                target.value = elementInfo.rolloverUpperLimit - 1;\n            }\n        }\n    }\n};\n"],"file":"advduration.min.js"}