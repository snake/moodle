{"version":3,"sources":["../src/content_select.js"],"names":["TreeGrid","treegridElem","doAllowRowFocus","doStartRowFocus","setTabIndexForCell","cell","tabIndex","focusable","getFocusableElems","setTabIndexForCellsInRow","row","cells","getNavigableCols","cellIndex","length","getAllRows","nodeList","querySelectorAll","Array","prototype","slice","call","root","setTabIndexOfFocusableElems","focusableElems","index","getAllNavigableRows","currentRow","getElementsByTagName","restrictIndex","numItems","focus","elem","focusCell","focusableChildren","onFocusIn","event","newTreeGridFocus","target","window","contains","oldCurrentRow","enableTabbingInActiveRowDescendants","tabbingRow","prevTreeGridFocus","localName","removeAttribute","getRowWithFocus","isTabbingOn","getContainingRow","document","activeElement","start","possibleRow","parentElement","isRowFocused","isEditableFocused","focusedElem","type","getColWithFocus","possibleCol","getLevel","parseInt","getAttribute","moveByRow","direction","requireLevelChange","requiredLevel","rows","numRows","rowIndex","indexOf","maxDistance","NaN","focusSameColInDifferentRow","fromRow","toRow","currentCol","fromCols","currentColIndex","toCols","moveToExtreme","moveToExtremeCol","moveToExtremeRow","moveByCol","cols","numCols","newColIndex","desiredColIndex","newRow","doPrimaryAction","alert","children","innerText","toggleExpanded","isExpandable","changeExpanded","isExpanded","doExpand","currentLevel","currentRowIndex","didChange","doExpandLevel","nextRow","rowLevel","willHideRow","isRowHidden","classList","add","remove","setAriaExpanded","moveAriaExpandedToFirstCell","expandedValue","firstCell","setAttribute","getAriaExpandedElem","hasAttribute","startRowIndex","addEventListener","HOME","END","numModifiersPressed","ctrlKey","altKey","shiftKey","metaKey","key","keyCode","preventDefault","range","createRange","selectNodeContents","firstChild","left","getBoundingClientRect","clientX","onfocusin","init","querySelector"],"mappings":"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","sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n/**\n * Module providing the treegrid behaviour to the table on the select content deep linking view, launch_deeplink.php.\n *\n * @module     enrol_lti/content_select\n * @package    enrol_lti\n * @copyright  2020 Jake Dallimore <jrhdallimore@gmail.com>\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n//import CustomEvents from 'core/custom_interaction_events';\n//import $ from 'jquery';\n\n/* exported TreeGrid */\nfunction TreeGrid (treegridElem, doAllowRowFocus, doStartRowFocus) {\n    function initAttributes () {\n        // Make sure focusable elements are not in the tab order\n        // They will be added back in for the active row\n        setTabIndexOfFocusableElems(treegridElem, -1);\n\n        // Add tabindex=\"0\" to first row, \"-1\" to other rows\n        // We will use the roving tabindex method since aria-activedescendant\n        // does not work in IE\n        var rows = getAllRows();\n        var index = rows.length;\n        var startRowIndex = doStartRowFocus ? 0 : -1;\n\n        while (index--) {\n            if (doAllowRowFocus) {\n                rows[index].tabIndex = index === startRowIndex ? 0 : -1;\n            }\n            else {\n                setTabIndexForCellsInRow(rows[index], -1);\n                moveAriaExpandedToFirstCell(rows[index]);\n            }\n        }\n\n        if (doStartRowFocus) {\n            return;\n        }\n\n        // Start with cell focus\n        var firstCell = getNavigableCols(rows[0])[0];\n        setTabIndexForCell(firstCell);\n    }\n\n    function setTabIndexForCell (cell, tabIndex) {\n        var focusable = getFocusableElems(cell)[0] || cell;\n        focusable.tabIndex = tabIndex;\n    }\n\n    function setTabIndexForCellsInRow (row, tabIndex) {\n        var cells = getNavigableCols(row);\n        var cellIndex = cells.length;\n        while (cellIndex--) {\n            setTabIndexForCell(cells[cellIndex], tabIndex);\n        }\n    }\n\n    function getAllRows () {\n        var nodeList = treegridElem.querySelectorAll('tbody > tr');\n        return Array.prototype.slice.call(nodeList);\n    }\n\n    function getFocusableElems (root) {\n        // textarea not supported as a cell widget as it's multiple lines\n        // and needs up/down keys\n        // These should all be descendants of a cell\n        var nodeList = root.querySelectorAll('a,button,input,td>[tabindex]');\n        return Array.prototype.slice.call(nodeList);\n    }\n\n    function setTabIndexOfFocusableElems (root, tabIndex) {\n        var focusableElems = getFocusableElems(root);\n        var index = focusableElems.length;\n        while (index--) {\n            focusableElems[index].tabIndex = tabIndex;\n        }\n    }\n\n    function getAllNavigableRows () {\n        var nodeList = treegridElem.querySelectorAll('tbody > tr:not([class~=\"hidden\"])');\n        // Convert to array so that we can use array methods on it\n        return Array.prototype.slice.call(nodeList);\n    }\n\n    function getNavigableCols (currentRow) {\n        var nodeList = currentRow.getElementsByTagName('td');\n        return Array.prototype.slice.call(nodeList);\n    }\n\n    function restrictIndex (index, numItems) {\n        if (index < 0) {\n            return 0;\n        }\n        return index >= numItems ? index - 1 : index;\n    }\n\n    function focus (elem) {\n        elem.tabIndex = 0; // Ensure focusable\n        elem.focus();\n    }\n\n    function focusCell (cell) {\n        // Check for focusable child such as link or textbox\n        // and use that if available\n        var focusableChildren = getFocusableElems(cell);\n        focus(focusableChildren[0] || cell);\n    }\n\n    // Restore tabIndex to what it should be when focus switches from\n    // one treegrid item to another\n    function onFocusIn (event) {\n        var newTreeGridFocus =\n            event.target !== window && treegridElem.contains(event.target) &&\n            event.target;\n\n        // The last row we considered focused\n        var oldCurrentRow = enableTabbingInActiveRowDescendants.tabbingRow;\n        if (oldCurrentRow) {\n            enableTabbingInActiveRowDescendants(false, oldCurrentRow);\n        }\n        if (doAllowRowFocus && onFocusIn.prevTreeGridFocus &&\n            onFocusIn.prevTreeGridFocus.localName === 'td') {\n            // Was focused on td, remove tabIndex so that it's not focused on click\n            onFocusIn.prevTreeGridFocus.removeAttribute('tabindex');\n        }\n\n        if (newTreeGridFocus) {\n            // Stayed in treegrid\n            if (oldCurrentRow) {\n                // There will be a different current row that will be\n                // the tabbable one\n                oldCurrentRow.tabIndex = -1;\n            }\n\n            // The new row\n            var currentRow = getRowWithFocus();\n            if (currentRow) {\n                currentRow.tabIndex = 0;\n                // Items within current row are also tabbable\n                enableTabbingInActiveRowDescendants(true, currentRow);\n            }\n        }\n\n        onFocusIn.prevTreeGridFocus = newTreeGridFocus;\n    }\n\n    // Set whether interactive elements within a row are tabbable\n    function enableTabbingInActiveRowDescendants (isTabbingOn, row) {\n        if (row) {\n            setTabIndexOfFocusableElems(row, isTabbingOn ? 0 : -1);\n            if (isTabbingOn) {\n                enableTabbingInActiveRowDescendants.tabbingRow = row;\n            }\n            else {\n                if (enableTabbingInActiveRowDescendants.tabbingRow === row) {\n                    enableTabbingInActiveRowDescendants.tabbingRow = null;\n                }\n            }\n        }\n    }\n\n    // The row with focus is the row that either has focus or an element\n    // inside of it has focus\n    function getRowWithFocus () {\n        return getContainingRow(document.activeElement);\n    }\n\n    function getContainingRow (start) {\n        var possibleRow = start;\n        if (treegridElem.contains(possibleRow)) {\n            while (possibleRow !== treegridElem) {\n                if (possibleRow.localName === 'tr') {\n                    return possibleRow;\n                }\n                possibleRow = possibleRow.parentElement;\n            }\n        }\n    }\n\n    function isRowFocused () {\n        return getRowWithFocus() === document.activeElement;\n    }\n\n    // Note: contenteditable not currently supported\n    function isEditableFocused () {\n        var focusedElem = document.activeElement;\n        return focusedElem.localName === 'input' && focusedElem.type !== 'checkbox';\n    }\n\n    function getColWithFocus (currentRow) {\n        if (currentRow) {\n            var possibleCol = document.activeElement;\n            if (currentRow.contains(possibleCol)) {\n                while (possibleCol !== currentRow) {\n                    if (possibleCol.localName === 'td') {\n                        return possibleCol;\n                    }\n                    possibleCol = possibleCol.parentElement;\n                }\n            }\n        }\n    }\n\n    function getLevel (row) {\n        return row && parseInt(row.getAttribute('aria-level'));\n    }\n\n    // Move backwards (direction = -1) or forwards (direction = 1)\n    // If we also need to move down/up a level, requireLevelChange = true\n    // When\n    function moveByRow (direction, requireLevelChange) {\n        var currentRow = getRowWithFocus();\n        var requiredLevel = requireLevelChange && currentRow &&\n            getLevel(currentRow) + direction;\n        var rows = getAllNavigableRows();\n        var numRows = rows.length;\n        var rowIndex = currentRow ? rows.indexOf(currentRow) : -1;\n        // When moving down a level, only allow moving to next row as the\n        // first child will never be farther than that\n        var maxDistance = requireLevelChange && direction === 1 ? 1 : NaN;\n\n        // Move in direction until required level is found\n        do {\n            if (maxDistance-- === 0) {\n                return; // Failed to find required level, return without focus change\n            }\n            rowIndex = restrictIndex(rowIndex + direction, numRows);\n        }\n        // eslint-disable-next-line no-unmodified-loop-condition\n        while (requiredLevel && requiredLevel !== getLevel(rows[rowIndex]));\n\n        if (!focusSameColInDifferentRow(currentRow, rows[rowIndex])) {\n            focus(rows[rowIndex]);\n        }\n    }\n\n    function focusSameColInDifferentRow (fromRow, toRow) {\n        var currentCol = getColWithFocus(fromRow);\n        if (!currentCol) {\n            return;\n        }\n\n        var fromCols = getNavigableCols(fromRow);\n        var currentColIndex = fromCols.indexOf(currentCol);\n\n        if (currentColIndex < 0) {\n            return;\n        }\n\n        var toCols = getNavigableCols(toRow);\n        // Focus the first focusable element inside the <td>\n        focusCell(toCols[currentColIndex]);\n        return true;\n    }\n\n    function moveToExtreme (direction) {\n        var currentRow = getRowWithFocus();\n        if (!currentRow) {\n            return;\n        }\n        var currentCol = getColWithFocus(currentRow);\n        if (currentCol) {\n            moveToExtremeCol(direction, currentRow);\n        }\n        else {\n            // Move to first/last row\n            moveToExtremeRow(direction);\n        }\n    }\n\n    function moveByCol (direction) {\n        var currentRow = getRowWithFocus();\n        if (!currentRow) {\n            return;\n        }\n        var cols = getNavigableCols(currentRow);\n        var numCols = cols.length;\n        var currentCol = getColWithFocus(currentRow);\n        var currentColIndex = cols.indexOf(currentCol);\n        // First right arrow moves to first column\n        var newColIndex = (currentCol || direction < 0) ? currentColIndex +\n            direction : 0;\n        // Moving past beginning focuses row\n        if (doAllowRowFocus && newColIndex < 0) {\n            focus(currentRow);\n            return;\n        }\n        newColIndex = restrictIndex(newColIndex, numCols);\n        focusCell(cols[newColIndex]);\n    }\n\n    function moveToExtremeCol (direction, currentRow) {\n        // Move to first/last col\n        var cols = getNavigableCols(currentRow);\n        var desiredColIndex = direction < 0 ? 0 : cols.length - 1;\n        focusCell(cols[desiredColIndex]);\n    }\n\n    function moveToExtremeRow (direction) {\n        var rows = getAllNavigableRows();\n        var newRow = rows[direction > 0 ? rows.length - 1 : 0];\n        if (!focusSameColInDifferentRow(getRowWithFocus(), newRow)) {\n            focus(newRow);\n        }\n    }\n\n    function doPrimaryAction () {\n        var currentRow = getRowWithFocus();\n        if (!currentRow) {\n            return;\n        }\n\n        // If row has focus, open message\n        if (currentRow === document.activeElement) {\n            alert('Message from ' + currentRow.children[2].innerText + ':\\n\\n' +\n                currentRow.children[1].innerText);\n            return;\n        }\n\n        // If first col has focused, toggle expand/collapse\n        toggleExpanded(currentRow);\n    }\n\n    function toggleExpanded (row) {\n        var cols = getNavigableCols(row);\n        var currentCol = getColWithFocus(row);\n        if (currentCol === cols[0] && isExpandable(row)) {\n            changeExpanded(!isExpanded(row), row);\n        }\n    }\n\n    function changeExpanded (doExpand, row) {\n        var currentRow = row || getRowWithFocus();\n        if (!currentRow) {\n            return;\n        }\n        var currentLevel = getLevel(currentRow);\n        var rows = getAllRows();\n        var currentRowIndex = rows.indexOf(currentRow);\n        var didChange;\n        var doExpandLevel = [];\n        doExpandLevel[currentLevel + 1] = doExpand;\n\n        while (++currentRowIndex < rows.length) {\n            var nextRow = rows[currentRowIndex];\n            var rowLevel = getLevel(nextRow);\n            if (rowLevel <= currentLevel) {\n                break; // Next row is not a level down from current row\n            }\n            // Only expand the next level if this level is expanded\n            // and previous level is expanded\n            doExpandLevel[rowLevel + 1] =\n                doExpandLevel[rowLevel] &&\n                isExpanded(nextRow);\n            var willHideRow = !doExpandLevel[rowLevel];\n            var isRowHidden = nextRow.classList.contains('hidden');\n\n            if (willHideRow !== isRowHidden) {\n                if (willHideRow) {\n                    nextRow.classList.add('hidden');\n                }\n                else {\n                    nextRow.classList.remove('hidden');\n                }\n                didChange = true;\n            }\n        }\n        if (didChange) {\n            setAriaExpanded(currentRow, doExpand);\n            return true;\n        }\n    }\n\n    // Mirror aria-expanded from the row to the first cell in that row\n    // (TBD is this a good idea? How else will screen reader user hear\n    // that the cell represents the opportunity to collapse/expand rows?)\n    function moveAriaExpandedToFirstCell (row) {\n        var expandedValue = row.getAttribute('aria-expanded');\n        var firstCell = getNavigableCols(row)[0];\n        if (expandedValue) {\n            firstCell.setAttribute('aria-expanded', expandedValue);\n            row.removeAttribute('aria-expanded');\n        }\n    }\n\n    function getAriaExpandedElem (row) {\n        return doAllowRowFocus ? row : getNavigableCols(row)[0];\n    }\n\n    function setAriaExpanded (row, doExpand) {\n        var elem = getAriaExpandedElem(row);\n        elem.setAttribute('aria-expanded', doExpand);\n        if (doExpand) {\n            elem.classList.add('expanded');\n            elem.classList.remove('collapsed');\n        } else {\n            elem.classList.remove('expanded');\n            elem.classList.add('collapsed');\n        }\n    }\n\n    function isExpandable (row) {\n        var elem = getAriaExpandedElem(row);\n        return elem.hasAttribute('aria-expanded');\n    }\n\n    function isExpanded (row) {\n        var elem = getAriaExpandedElem(row);\n        return elem.getAttribute('aria-expanded') === 'true';\n    }\n\n    function onKeyDown (event) {\n        var ENTER = 13;\n        var UP = 38;\n        var DOWN = 40;\n        var LEFT = 37;\n        var RIGHT = 39;\n        var HOME = 36;\n        var END = 35;\n        var CTRL_HOME = -HOME;\n        var CTRL_END = -END;\n\n        var numModifiersPressed = event.ctrlKey + event.altKey + event.shiftKey +\n            event.metaKey;\n\n        var key = event.keyCode;\n\n        if (numModifiersPressed === 1 && event.ctrlKey) {\n            key = -key; // Treat as negative key value when ctrl pressed\n        }\n        else if (numModifiersPressed) {\n            return;\n        }\n\n        switch (key) {\n            case DOWN:\n                moveByRow(1);\n                break;\n            case UP:\n                moveByRow(-1);\n                break;\n            case LEFT:\n                if (isEditableFocused()) {\n                    return;  // Leave key for editable area\n                }\n                if (isRowFocused()) {\n                    // eslint-disable-next-line babel/no-unused-expressions\n                    changeExpanded(false) || moveByRow(-1, true);\n                }\n                else {\n                    moveByCol(-1);\n                }\n                break;\n            case RIGHT:\n                if (isEditableFocused()) {\n                    return;  // Leave key for editable area\n                }\n\n                // If row: try to expand\n                // If col or can't expand, move column to right\n                if (!isRowFocused() || !changeExpanded(true)) {\n                    moveByCol(1);\n                }\n                break;\n            case CTRL_HOME:\n                moveToExtremeRow(-1);\n                break;\n            case HOME:\n                if (isEditableFocused()) {\n                    return;  // Leave key for editable area\n                }\n                moveToExtreme(-1);\n                break;\n            case CTRL_END:\n                moveToExtremeRow(1);\n                break;\n            case END:\n                if (isEditableFocused()) {\n                    return;  // Leave key for editable area\n                }\n                moveToExtreme(1);\n                break;\n            case ENTER:\n                doPrimaryAction();\n                break;\n            default:\n                return;\n        }\n\n        // Important: don't use key for anything else, such as scrolling\n        event.preventDefault();\n    }\n\n    // Toggle row expansion if the click is over the expando triangle\n    // Since the triangle is a pseudo element we can't bind an event listener\n    // to it. Another option is to have an actual element with role=\"presentation\"\n    function onClick (event) {\n        var target = event.target;\n        if (target.localName !== 'td') {\n            return;\n        }\n\n        var row = getContainingRow(event.target);\n        if (!isExpandable(row)) {\n            return;\n        }\n\n        // Determine if mouse coordinate is just to the left of the start of text\n        var range = document.createRange();\n        range.selectNodeContents(target.firstChild);\n        var left = range.getBoundingClientRect().left;\n        var EXPANDO_WIDTH = 20;\n\n        if (event.clientX < left && event.clientX > left - EXPANDO_WIDTH) {\n            changeExpanded(!isExpanded(row), row);\n        }\n    }\n\n    // Double click on row toggles expansion\n    function onDoubleClick (event) {\n        var row = getContainingRow(event.target);\n        if (row) {\n            if (isExpandable(row)) {\n                changeExpanded(!isExpanded(row), row);\n            }\n            event.preventDefault();\n        }\n    }\n\n    initAttributes();\n    treegridElem.addEventListener('keydown', onKeyDown);\n    treegridElem.addEventListener('click', onClick);\n    treegridElem.addEventListener('dblclick', onDoubleClick);\n    // Polyfill for focusin necessary for Firefox < 52\n    window.addEventListener(window.onfocusin ? 'focusin' : 'focus',\n        onFocusIn, true);\n}\n\nexport const init = () =>  {\n    return new TreeGrid(document.querySelector('#treegrid'), false, false);\n};\n"],"file":"content_select.min.js"}